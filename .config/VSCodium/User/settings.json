{
  "[json]": {
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "breadcrumbs.enabled": true,
  "cSpell.userWords": [
    "DOCKERHUB",
    "Eventf",
    "Kubernetes",
    "Middlewares",
    "Traceback",
    "Untracked",
    "Vuetify",
    "Whitespaces",
    "amit",
    "amitlevy",
    "ansible",
    "autofetch",
    "brotli",
    "circleci",
    "consts",
    "devcontainer",
    "entrypoint",
    "faas",
    "favicon",
    "getcwd",
    "getpid",
    "gitlens",
    "godoc",
    "gophercises",
    "hyperparameters",
    "jsons",
    "kube",
    "kubebuilder",
    "kubectl",
    "kubestone",
    "mongodb",
    "neovim",
    "nginx",
    "numpy",
    "nvim",
    "openfaas",
    "pylint",
    "pytest",
    "serializable",
    "skaffold",
    "structs",
    "venv",
    "wifi",
    "xlsm"
  ],
  "editor.fontFamily": "MesloLGL Nerd Font Mono",
  "editor.fontSize": 19,
  "editor.formatOnSave": true,
  "editor.lineNumbers": "on",
  "editor.minimap.enabled": false,
  "editor.mouseWheelScrollSensitivity": 1,
  "editor.mouseWheelZoom": true,
  "editor.renderWhitespace": "boundary",
  "editor.suggestSelection": "first",
  "editor.suggest.showStatusBar": true,
  "editor.scrollBeyondLastLine": false,
  "editor.wordWrap": "on",
  "files.autoSave": "off",
  "files.eol": "\n",
  "files.exclude": {
    "**/*.pyc": {
      "when": "$(basename).py"
    },
    "**/.DS_Store": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.pytest_cache": true,
    "**/.svn": true,
    "**/CVS": true,
    "**/__pycache__": true
  },
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "gitlens.views.repositories.files.layout": "tree",
  "go.formatTool": "goimports",
  "go.lintTool": "golangci-lint",
  "telemetry.enableTelemetry": false,
  "terminal.integrated.fontFamily": "MesloLGL Nerd Font Mono",
  "window.titleBarStyle": "custom",
  "window.zoomLevel": 1,
  "workbench.editor.enablePreview": true,
  "workbench.iconTheme": "vscode-great-icons",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // Causes the debug view to automatically appear when a breakpoint is hit. This
  // setting is global and not configurable per-language.
  "debug.openDebug": "openOnDebugBreak",
  "[dart]": {
    // Automatically format code on save and during typing of certain characters
    // (like `;` and `}`).
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    // Draw a guide line at 80 characters, where Dart's formatting will wrap code.
    "editor.rulers": [
      80
    ],
    // Disables built-in highlighting of words that match your selection. Without
    // this, all instances of the selected text will be highlighted, interfering
    // with Dart's ability to highlight only exact references to the selected variable.
    "editor.selectionHighlight": false,
    // By default, VS Code prevents code completion from popping open when in
    // "snippet mode" (editing placeholders in inserted code). Setting this option
    // to `false` stops that and allows completion to open as normal, as if you
    // weren't in a snippet placeholder.
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    // By default, VS Code will pre-select the most recently used item from code
    // completion. This is usually not the most relevant item.
    //
    // "first" will always select top item
    // "recentlyUsedByPrefix" will filter the recently used items based on the
    //     text immediately preceding where completion was invoked.
    "editor.suggestSelection": "first",
    // Allows pressing <TAB> to complete snippets such as `for` even when the
    // completion list is not visible.
    "editor.tabCompletion": "onlySnippets",
    // By default, VS Code will populate code completion with words found in the
    // current file when a language service does not provide its own completions.
    // This results in code completion suggesting words when editing comments and
    // strings. This setting will prevent that.
    "editor.wordBasedSuggestions": false,
  },
  "dart.env": {
    "CHROME_EXECUTABLE": "/usr/bin/brave"
  },
  "dart.closingLabels": false,
  "redhat.telemetry.enabled": false
}